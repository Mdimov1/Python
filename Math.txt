
# Дадени са три списъка с цели числа (генерирате ги сами) с еднакъв брой елементи
# Всеки списък представлява страна от триъгълник
# Ако i е номера на триъгълника, а списък[i] е страна в i-тия триъгълник, да се открият:
# Дадените страни могат ли да послужат за образуване на триъгълник: (a<b+c) & (b<a+c) & (c<a+b) ?
# f_sim: подобните триъгълници:
# признак за подобие 1: a_1/а_2=b_1/b_2 или c_1/c_2=b_1/b_2 или a_1/а_2=c_1/c_2
# признак за подобие 2:
# f_ort: кои от триъгълниците са правоъгълни: c^2=a^2+b^2 или a^2=c^2+b^2 или b^2=a^2+c^2
# f_ab: кои от триъгълниците са равнобедрени: a=b или a=c или b=c
# f_abc: кои от триъгълниците са равностранни: a=b=c
# f_P: да се изчисли периметъра на триъгълника: P=a+b+c, p=P/2
# f_S: да се изчисли лицето на триъгълника: S=sqrt(p*(p-a)*(p-b)*(p-c)), където p е полупериметъра
# f_r: да се изчисли радиусът на вписаната окръжност: r=2*S/(a+b+c)
# f_R: да се изчисли радиусът на описаната окръжност: R=4*S/(a*b*c)
# f_tri: Да се генерира един списък TRI, в който всеки запис представлява списък със следната структура: a,b,c,P,S,r,R
# f_tri_o: Да се запази списъка TRI като файл, така че колоните във файла да отразяват структурата на списъка


try:
    from math import sqrt
except:
    import math

# ако прави проблеми, използвайте следващия ред, а този сложете в коментар
#import numpy as np

a=[x for x in range(1,10)]
b=[x for x in range(11,20)]
c=[x for x in range(21,30)]

ort=[]
ab=[]
abc=[]
P=[]
S=[]
r=[]
R=[]
tri=[]

for i in range(0,len(a)):
    if ((a[i]<b[i]+c[i]) & (b[i]<a[i]+c[i]) & (c[i]<a[i]+b[i])):
        tri.append("образуват триъгълник")
    else:
        tri.append("не образуват триъгълник")
    if (c[i]**2==a[i]**2+b[i]**2)|(a[i]**2==c[i]**2+b[i]**2)|(b[i]**2==a[i]**2+c[i]**2):
        ort.append("правоъгълен")
    else:
        ort.append("не е правоъгълен")
    if  a[i]==b[i] | a[i]==c[i] | b[i]==c[i]:
        ab.append("равнобедрен")
    else:
        ab.append("не е равнобедрен")
    if a[i]==b[i]==c[i]:
        abc.append("равностранен")
    else:
        abc.append("не е равностранен")
    p=(a[i]+b[i]+c[i])/2
    P.append(2*p)
    s2=p*(p-a[i])*(p-b[i])*(p-c[i])
    if s2>=0:
        s=math.sqrt(s2)
        #s=np.sqrt(s2)
        S.append(s)
        r.append(s / p)
        R.append(4 * s / (a[i] * b[i] * c[i]))
    else:
        s="NA"
        S.append(s)
        r.append(s)
        R.append(s)



TRI=[]
for j in range(0,len(a)):
    TRI.append([a[j],b[j],c[j],ort[j],ab[j],abc[j],P[j],S[j],r[j],R[j]])

f= open("TRI.txt","w+")
for k in range(0,len(TRI)):
     f.write(str(TRI[k])+"\n")
f.close()